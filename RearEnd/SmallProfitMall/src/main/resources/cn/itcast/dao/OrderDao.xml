<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.OrderDao">

    <resultMap id="orderMap" type="cn.itcast.domain.order.Order">
        <id property="id" column="id"></id>
        <result property="userId" column="userId"></result>
        <result property="orderId" column="orderId"></result>
        <result property="paymentWay" column="paymentWay"></result>
        <result property="deliveryWay" column="deliveryWay"></result>
        <result property="orderTime" column="orderTime"></result>
        <result property="submitTime" column="submitTime"></result>
        <result property="deliveryTime" column="deliveryTime"></result>
        <result property="paymentTime" column="paymentTime"></result>
        <result property="orderNote" column="orderNote"></result>
        <result property="orderTotal" column="orderTotal"></result>
        <result property="orderState" column="orderState"></result>
         <!-- 配置商品集合的映射 -->
        <collection property="productContents" ofType="cn.itcast.domain.order.ProductContent">
            <id property="purchaseId" column="purchaseId"></id>
            <result property="orderId" column="orderId"></result>
            <result property="productName" column="productName"></result>
            <result property="productImage" column="productImage"></result>
            <result property="productPrice" column="productPrice"></result>
            <result property="productConfiguration" column="productConfiguration"></result>
            <result property="productQuantity" column="productQuantity"></result>
            <result property="productWeight" column="productWeight"></result>
            <result property="evaluate" column="evaluate"></result>
            <result property="productState" column="productState"></result>
        </collection>
    </resultMap>

    <resultMap id="allOrderMap" type="cn.itcast.domain.order.Order">
        <id property="id" column="id"></id>
        <result property="sign" column="sign"></result>
        <result property="userId" column="userId"></result>
        <result property="orderId" column="orderId"></result>
        <result property="paymentWay" column="paymentWay"></result>
        <result property="deliveryWay" column="deliveryWay"></result>
        <result property="orderTime" column="orderTime"></result>
        <result property="submitTime" column="submitTime"></result>
        <result property="deliveryTime" column="deliveryTime"></result>
        <result property="paymentTime" column="paymentTime"></result>
        <result property="orderNote" column="orderNote"></result>
        <result property="orderTotal" column="orderTotal"></result>
        <result property="orderState" column="orderState"></result>
        <result property="changeQuantity" column="changeQuantity"></result>

        <association property="orderAddress" resultMap="orderAddressMap" javaType="cn.itcast.domain.order.OrderAddress">

        </association>
        <!-- 配置商品集合的映射 -->
        <collection property="productContents" ofType="cn.itcast.domain.order.ProductContent">
            <id property="purchaseId" column="purchaseId"></id>
            <result property="orderId" column="orderId"></result>
            <result property="productId" column="ProductId"></result>
            <result property="productName" column="productName"></result>
            <result property="productImage" column="productImage"></result>
            <result property="productPrice" column="productPrice"></result>
            <result property="productConfiguration" column="productConfiguration"></result>
            <result property="productQuantity" column="productQuantity"></result>
            <result property="productWeight" column="productWeight"></result>
            <result property="evaluate" column="evaluate"></result>
            <result property="productState" column="productState"></result>
        </collection>

    </resultMap>

    <!--配置地址映射-->
    <resultMap id="orderAddressMap" type="cn.itcast.domain.order.OrderAddress">
            <id property="orderId" column="orderId"></id>
            <result property="name" column="name"></result>
            <result property="phone" column="phone"></result>
            <result property="email" column="email"></result>
            <result property="areas" column="areas"></result>
            <result property="alias" column="alias"></result>
            <result property="detailedAddress" column="detailedAddress"></result>
    </resultMap>

    <!--新增订单-->
    <insert id="addOrder" parameterType="cn.itcast.domain.order.Order">
        INSERT INTO
           userOrder(userId,orderId,orderTime,orderTotal)
        VALUES
            (#{userId},#{orderId},#{orderTime},#{orderTotal})
    </insert>
    <!--新增订单商品内容-->
    <insert id="addProductContent" parameterType="cn.itcast.domain.order.ProductContent">
        INSERT INTO
           orders(orderId,ProductId,productName,productImage,productConfiguration,
           productQuantity,productPrice,productWeight,evaluate)
        VALUES
            (#{orderId},#{productId},#{productName},
            #{productImage},#{productConfiguration},
            #{productQuantity},#{productPrice},#{productWeight},#{evaluate})
    </insert>

    <!--新增批量插入-->
    <insert id="addListProduct">
    INSERT INTO orders
		(orderId,ProductId,productName,productImage,productConfiguration,productQuantity,productPrice,productWeight,evaluate)
	VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.orderId,jdbcType=VARCHAR},
            #{item.productId,jdbcType=INTEGER},
            #{item.productName,jdbcType=VARCHAR},
            #{item.productImage,jdbcType=VARCHAR},
            #{item.productConfiguration,jdbcType=VARCHAR},
            #{item.productQuantity,jdbcType=VARCHAR},
            #{item.productPrice,jdbcType=DOUBLE},
            #{item.productWeight,jdbcType=VARCHAR},
            #{item.evaluate,jdbcType=INTEGER})
        </foreach>
    </insert>

    <!--新增订单地址-->
    <insert id="addOrdeAddress">
    INSERT INTO orderAddress
		(userId,orderId,name,areas,detailedAddress,phone,email,areaCodes,alias)
	VALUES
	    (#{address.userId},#{orderId},#{address.name},#{address.areas},#{address.detailedAddress},#{address.phone},#{address.email},#{address.areaCodes},#{address.alias})
    </insert>

    <!--查询订单-->
    <select id="findOrder" resultMap="orderMap">
        SELECT
            uo.userId,uo.id,uo.orderId,uo.orderTotal,o.productName,o.purchaseId,
            o.productImage,o.productPrice,o.productConfiguration,
            o.productQuantity,o.productWeight,o.evaluate
        FROM
            userOrder uo
        LEFT JOIN orders o
            ON uo.orderId=o.orderId
        WHERE
             uo.userId=#{userId}
        AND
            uo.orderId=#{orderId}
    </select>

    <!--按条件查询订单-->
    <select id="findAllOrder" resultMap="allOrderMap">
        SELECT
        uo.*,
        o.productName,
        o.purchaseId,
        o.productImage,
        o.productPrice,
        o.productConfiguration,
        o.productQuantity,
        o.productWeight,
        o.evaluate,
        o.productState,
        o.ProductId,
        oa.orderId AS orderIds,
        oa.NAME,
        oa.areas,
        oa.detailedAddress,
        oa.phone,
        oa.email,
        oa.alias
        FROM
        userOrder uo
        LEFT JOIN orders o ON uo.orderId = o.orderId
        LEFT JOIN orderAddress oa ON uo.orderId = oa.orderId
        WHERE
        uo.orderId IN (
        SELECT
        orderId
        FROM
        (
        SELECT
        uos.orderId
        FROM
        userOrder uos
        <where>
            AND uos.userId = #{userId}
                <if test = "orderState!=0" >
                    AND uos.orderState = #{orderState}
                </if >
            AND uos.isDelete=0
         </where >
        ORDER BY
        uos.orderTime DESC
        LIMIT #{start}, #{pageSize} ) AS user_order
        )
        ORDER BY
        uo.orderTime DESC
    </select>

    <!--查询订单详细-->
    <select id="findDetailedOrder" resultMap="allOrderMap">
        SELECT
            uo.*,o.productName,
            o.purchaseId,
            o.productImage,o.productPrice,o.productConfiguration,
            o.productQuantity,o.productWeight,o.evaluate,
            oa.orderId AS orderIds,oa.name,oa.areas,oa.detailedAddress,oa.phone,oa.email,oa.alias
        FROM
            userOrder uo
        LEFT JOIN
            orders o
        ON
            uo.orderId=o.orderId,
            orderAddress oa

        <where>
            uo.orderId=#{orderId}
            <if test="userId!=null">
                AND   uo.userId=#{userId}
            </if>
            AND
                uo.orderId=#{orderId}
            AND
                o.orderId=oa.orderId
        </where>

    </select>

    <!--查询订单商品信息-->
    <select id="fendOrderProduct" parameterType="java.lang.String" resultType="cn.itcast.domain.order.ProductContent">
        SELECT * FROM orders WHERE orderId=#{orderId}
    </select>

    <!--确认订单-->
    <update id="confirmOrder" parameterType="cn.itcast.domain.order.Order">
        UPDATE
            userOrder
        SET
             paymentWay=#{paymentWay},deliveryWay=#{deliveryWay},
             deliveryTime=#{deliveryTime},paymentTime=#{paymentTime},
             submitTime=#{submitTime},orderNote=#{orderNote}
        WHERE
            userId=#{userId}
        AND
            orderId=#{orderId}
    </update>

    <!--修改订单状态-->
    <update id="updateOrderState">
         UPDATE
            userOrder
        SET
            orderState=#{orderState}
        WHERE
            userId=#{userId}
        AND
            orderId=#{orderId}
    </update>

    <!--修改订单状态 支付时间-->
    <update id="updateOrderPayState">
         UPDATE
            userOrder
        SET
            orderState=#{orderState},
            paymentTime=#{paymentTime}
        WHERE
            userId=#{userId}
        AND
            orderId=#{orderId}
    </update>

    <!--修改订单-->
    <update id="updateOrder">
        UPDATE
            userOrder uo , orderAddress oa
        SET
            uo.deliveryTime = #{deliveryTime} ,
            uo.orderNote=#{orderNote},uo.changeQuantity=#{changeQuantity},
            oa.name = #{address.name},oa.areas=#{address.areas},oa.detailedAddress=#{address.detailedAddress},oa.phone=#{address.phone},
            oa.email=#{address.email},oa.areas=#{address.areas},oa.alias=#{address.alias}
        WHERE
            uo.orderId=#{orderId}
        AND
            uo.userId=#{userId}
        AND
            uo.orderId = oa.orderId
    </update>

    <!--查询订单修改次数-->
    <select id="findChangeQuantity" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT changeQuantity FROM userOrder WHERE orderId=#{orderId} AND userId=#{userId}
    </select>


    <!--查询最后一条记录流水号-->
    <select id="findSerialnumber" resultType="java.lang.String">
      SELECT orderId FROM userOrder WHERE TO_DAYS(orderTime) = TO_DAYS(NOW()) ORDER BY orderTime DESC LIMIT 1
    </select>

    <!--查询订单总计-->
    <select id="fenOrderTotal" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT orderTotal FROM userOrder WHERE userId=#{userId} AND orderId=#{orderId}
</select>

    <!--查询订单数量-->
    <select id="fendOrderQuantity" resultType="java.lang.Integer">
           SELECT count(*) FROM userOrder
        <where>
            userId=#{userId}
            <if test="orderState!=0">
                AND orderState=#{orderState}
            </if>
            AND isDelete=0
        </where>
    </select>

    <!--查询商品不同状态数量-->
    <select id="findProductQuantity" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        orders

        WHERE

        orderId IN (SELECT orderId FROM (SELECT orderId FROM userOrder WHERE userId = #{userId} AND isDelete = 0) AS orderId)
        AND
        <if test="productState==2">
           (productState   =  1 or  productState   =  2)
        </if>
        <if test="productState==3">
            productState  =  3
        </if>
        <if test="productState==4">
            productState  =  4
        </if>
        AND     isDelete=0
    </select>

    <!--查询不同状态商品-->
    <select id="findOrderProduct" resultType="cn.itcast.domain.order.ProductContent">
    SELECT
        s.* ,uo.paymentTime
    FROM
        orders s
        LEFT JOIN userOrder uo ON s.orderId = uo.orderId
    WHERE
        s.orderId IN (SELECT orderId FROM (SELECT orderId FROM userOrder WHERE userId = #{userId}  ORDER BY
        paymentWay DESC
        LIMIT #{start}, #{pageSize} ) AS orderId)
     AND
     <if test="productState==2">
       ( s.productState   =  1 or   s.productState    =  2)
     </if>
    <if test="productState==3">
        s.productState  =  3
    </if>
    <if test="productState==4">
        productState  =  4
    </if>
        AND s.isDelete=0
    </select>

    <!--查询购买商品的id跟数量-->
    <select id="findPurchase" resultType="cn.itcast.domain.order.ProductContent">
        SELECT ProductId,productQuantity FROM orders WHERE purchaseId=#{purchaseId}
    </select>
    <!--查询待收货数量-->
    <select id="findOrderTakeQuantity" resultType="java.lang.Integer">
        SELECT count(*) FROM orders WHERE orderId=#{orderId} AND productState &lt; 3
    </select>


    <!--删除订单-->
    <update id="deleteOrder" >
        UPDATE userOrder
        SET
        isDelete=1
       where
        orderId = #{orderId}
        AND userId=#{userId}
    </update>

    <!--删除已购买商品商品-->
    <update id="deleteProduct" >
        UPDATE  userOrder uo
        LEFT JOIN
        orders o
        ON
        uo.orderId=o.orderid
        SET
        o.isDelete=1
        <where>
            <if test="id!=null and deleteAll!=true ">
                AND o.id in
                <foreach collection="id" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="deleteAll==true ">
                AND o.orderId in (SELECT orderId FROM userOrder WHERE userId = #{userId}) AND productState=#{productState}
            </if>

        </where>
    </update>

    <!--修改商品状态-->
    <update id="updateProductState">
        UPDATE orders
        SET
        productState=#{productState}
        <where>
            <if test="purchaseId!=null">
                AND purchaseId=#{purchaseId}
            </if>
            <if test="orderId!=null">
                AND  orderId=#{orderId}
            </if>
        </where>


    </update>


<!--    &lt;!&ndash;修改商品状态&ndash;&gt;-->
<!--    <update id="updateEvaluate">-->
<!--        UPDATE orders-->
<!--        SET-->
<!--        updateEvaluate=#{updateEvaluate}-->
<!--        Where-->
<!--         purchaseId=#{purchaseId}-->
<!--    </update>-->


</mapper>