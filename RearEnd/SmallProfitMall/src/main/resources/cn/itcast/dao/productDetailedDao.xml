<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.ProductDetailsDao">
    <resultMap id="ProductDatailsMap" type="cn.itcast.domain.ProductDatails.ProductDetailsResult">
        <id property="pid" column="ProductId"></id>
        <result property="productName" column="ProductName"></result>
        <result property="productSales" column="ProductSales"></result>
        <result property="weight" column="ProductWeight"></result>
        <result property="video" column="ProductVideo"></result>
        <result property="salesPrice" column="SalesPrice"></result>
        <result property="productPrice" column="ProductPrice"></result>
        <result property="productInventory" column="ProductInventory"></result>
        <result property="spikePrice" column="SpikePrice"></result>
        <result property="inventorys" column="ProductInventory"></result>
        <!--映射颜色集合-->
        <collection property="colour" ofType="cn.itcast.domain.ProductDatails.ProductColour">
            <id property="colourId" column="colourId"></id>
            <result property="productColour" column="productColour"></result>
        </collection>
        <!--映射尺寸集合-->
        <collection property="size" ofType="cn.itcast.domain.ProductDatails.ProductSize">
            <id property="sizeId" column="sizeId"></id>
            <result property="productSize" column="productSize"></result>
        </collection>
        <!--映射版本集合-->
        <collection property="version" ofType="cn.itcast.domain.ProductDatails.ProductVersion">
            <id property="versionId" column="versionId"></id>
            <result property="version" column="version"></result>
        </collection>
        <!--映射口味集合-->
        <collection property="taste" ofType="cn.itcast.domain.ProductDatails.ProductTaste">
            <id property="tasteId" column="tasteId"></id>
            <result property="productTaste" column="productTaste"></result>
        </collection>
        <!--映射规格集合-->
        <collection property="specification" ofType="cn.itcast.domain.ProductDatails.ProductSpecification">
          <id property="specificationId" column="specificationId"></id>
            <result property="specification" column="specification"></result>
        </collection>
        <!--映射种类集合-->
        <collection property="kind" ofType="cn.itcast.domain.ProductDatails.ProductKind">
            <id property="kindId" column="kindId"></id>
            <result property="productKind" column="productKind"></result>
        </collection>
        <!--映射图片集合-->
        <collection property="imageSite" ofType="java.lang.String">
            <constructor>
                <arg column="ImageSite"></arg>
            </constructor>
        </collection>
        <!--映射套餐集合-->
        <collection property="combo" ofType="cn.itcast.domain.ProductDatails.ProductCombo">
          <id property="comboId" column="comboId"></id>
            <result property="productCombo" column="productCombo" ></result>
        </collection>

    </resultMap>

    <!--根据id查询商品-->
    <select id="fendProduct" resultMap="ProductDatailsMap">
           SELECT
                pb.id,
                pb.ProductId,
                pb.ProductName,
                pb.ProductVideo,
                pb.ProductWeight,
                pb.prodcutPrimaryCategory,
                pb.productFinalCategory,
                pb.productFinalCategory,
                pb.productPageviews,
                pp.ProductPrice,
                pp.SpikePrice,
                pp.SalesPrice,
                pp.ProductSales,
                pp.ProductInventory,
                pi.ImageSite,
                pc.ProductColour,
                pc.colourId,
                pco.ProductCombo,
                pco.comboId,
                pk.ProductKind,
                pk.kindId,
                ps.ProductSize,
                ps.sizeId,
                pt.ProductTaste,
                pt.tasteId,
                pv.version,
                pv.versionId,
                pst.Specification,
                pst.specificationId
            from
			    ProductBasis pb
			LEFT JOIN
				ProductPrice pp
			ON
				pb.ProductId = pp.ProductId
			LEFT JOIN
				ProductImage pi
			ON
				pb.ProductId=pi.ProductId
            LEFT JOIN
            ProductColour pc
            ON
            pb.ProductId=pc.ProductId
			LEFT JOIN
				ProductCombo pco
			ON
				pb.ProductId=pco.ProductId
			LEFT JOIN
				ProductKind pk
			ON
				pb.ProductId=pk.ProductId
			LEFT JOIN
				ProductSize ps
			ON
				pb.ProductId = ps.ProductId
			LEFT JOIN
				ProductTaste pt
			ON
				pb.ProductId=pt.ProductId
			LEFT JOIN
				ProductVersion pv
			ON
				pb.ProductId=pv.ProductId
			LEFT JOIN
				ProductSpecification pst
			ON
				pb.ProductId=pst.ProductId
            WHERE
                pb.ProductId=#{productId}
    </select>
    
    <select id="fendAttributes" parameterType="java.lang.Integer" resultType="cn.itcast.domain.ProductDatails.ProductAttributes">
        SELECT * FROM productAttributes where productId = #{productId}
    </select>
    <!--查询商品图片-->
    <select id="findProductImage" resultType="java.lang.String">
       SELECT ImageSite FROM `ProductImage` WHERE ProductId=#{productId} AND sign=1
    </select>
    <!--查询商品价格-->
    <select id="findProductPrice" resultType="java.lang.Double">
        SELECT ProductPrice FROM `ProductPrice` WHERE ProductId=#{productId}
    </select>

    <!--查询商品库存-->
    <select id="findProductInventory" resultType="java.lang.Double">
        SELECT ProductInventory FROM `ProductPrice`
        WHERE ProductId in
        <foreach collection="productId" item="productId" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </select>

    <!--查询商品销量-->
    <select id="findProductSales" resultType="java.lang.Double">
        SELECT ProductSales FROM `ProductPrice`
        WHERE ProductId in
        <foreach collection="productId" item="productId" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </select>

    <!--修改商品销量-->
    <update id="updateProductSales">
        UPDATE ProductPrice SET ProductSales = ProductSales+#{purchaseQuantity}
    </update>

    <!--查询商品访问量-->
    <select id="findProductPageviews" resultType="java.lang.Integer">
        SELECT ProductPageviews FROM  ProductBasis WHERE ProductId = #{productId}
    </select>

    <!--查询同类型的商品推荐-->
    <select id="findFinalRecommend" resultType="cn.itcast.domain.ProductDatails.Recommend">
        SELECT
        ImageSite,ProductId

        FROM
            ProductImage
        WHERE
            ProductId IN (
            SELECT
                ProductId
            FROM
                ProductBasis pb

            WHERE
            <if test="gradePrimary==1">
                productFinalCategory = ( SELECT pb.productFinalCategory FROM ProductBasis pb JOIN ProductPrice pp ON pb.ProductId=pp.ProductId WHERE pb.ProductId = #{productId}  order by pp.ProductSales  )
                )
            </if>
           <if test="gradePrimary==2">
               productSecondaryCategory = ( SELECT pb.productSecondaryCategory FROM ProductBasis pb JOIN ProductPrice pp ON pb.ProductId=pp.ProductId WHERE pb.ProductId = #{productId} order by pp.ProductSales)
               )
           </if>
           <if test="gradePrimary==3">
               prodcutPrimaryCategory = ( SELECT pb.prodcutPrimaryCategory FROM ProductBasis pb JOIN ProductPrice pp ON pb.ProductId=pp.ProductId WHERE pb.ProductId = #{productId} order by pp.ProductSales )
               )
           </if>
           <if test="gradePrimary==4">
               pb.productId = (SELECT
               ProductId
               FROM
               ProductPrice
               order by ProductSales   )
               )
           </if>
        and  sign = 1 	 LIMIT #{start}, #{pageSize}
    </select>

    <!--修改商品库存-->
    <update id="updateProductInventory">
        UPDATE ProductPrice SET ProductInventory = ProductInventory-#{purchaseQuantity}  WHERE ProductId = #{productId}
    </update>

    <!--增加商品浏览量-->
    <update id="updateProductPageviews">
       UPDATE  ProductBasis SET productPageviews  = productPageviews+ 1 WHERE ProductId = #{productId}
    </update>


    <!--查询商品介绍,商品保障,商品参数-->
    <select id="findProductDesciption" resultType="cn.itcast.domain.ProductDatails.ProductDetailsResult">
    SELECT productId,productDescription,
            productAfterSale,productParameter
     FROM ProductBasis
     WHERE ProductId=#{productId};
    </select>

    <!--查询商品库跟销量-->
    <select id="findSalesInventory" resultType="cn.itcast.domain.ProductDatails.ProductDetailsResult">
        SELECT ProductInventory,ProductSales
         FROM ProductPrice
         WHERE ProductId=#{productId};
    </select>


</mapper>